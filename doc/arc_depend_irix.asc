               SGI IRIX Operating System Dependencies
               ======================================

                  (c) 2001 Sun Microsystems, Inc.


Dependencies for IRIX 6.2
--------------------------------

Processor Sets:

	CODINE/GRD map the numerical processor range definitions in the
	"processors" queue configuration parameter onto SGI processor sets
	(see pset(1)). For each job executing in a queue with a valid
	processor range specification a corresponding processor set is
	created before and removed after execution of the job.  The
	processor set number as displayed by pset(1) is identical to the
	job-id multiplied by a constant factor (currently 100).  If a
	processor set with this number already exists, the number is
	incremented by 1.

	If cod_shepherd(8)/grd_shepherd(8), the CODINE/GRD component being
	responsible for managing processor sets, is aborted disgracefully
	while a processor set for a job is configured, the corresponding
	processor set cannot be removed by CODINE/GRD and thus needs to be
	removed manually, e.g. using pset(1).

	Processor sets can only be configured with root permission.  Thus
	CODINE/GRD will only make use of the definitions in the "processors"
	queue configuration parameter if the execution daemon and thus the
	shepherd process are started with root permission.


Dependencies for IRIX 6.2 and later
-----------------------------------

Array Session Handles:

	If executing with root permission CODINE/GRD will set a unique array
	session handle (see array_sessions(5)) for each job. This array
	session handle will stick to every process of the job and cannot be
	changed by the unprivileged user. The array session handle will also
	be stored in the accounting information which can be traced with
	satd(1) or, much more conveniently, by products like PerfAcct (from
	Instrumental Inc., St. Paul, Minnesota, USA -
	http://www.instrumental.com)


Checkpointing:

	The Hibernator Kernel Level Checkpointing facility from Aurema,
	Chippendale, NSW, Australia (http://www.aurema.com) is supported.
	Please use the checkpointing interface specification "hibernator" in
	the checkpointing objects which you define for IRIX 6.2+ machines
	equipped with Hibernator.


Dependencies for IRIX 6.4 and later
-----------------------------------

Processor Sets:

	Processor sets as eplained for IRIX 6.2 and earlier are no longer
	supported. IRIX provides the Miser facility with the miser_cpuset(1)
	command. It is possible to interface miser_cpuset(1) from
	CODINE/GRD. Please contact your local CODINE/GRD distributor for
	further information.

Checkpointing:

	The IRIX CheckPoint and Restart (CPR) facility is supported (see
	cpr(1)). Please use the checkpointing interface specification "cpr"
	in the checkpointing objects which you define for IRIX 6.4+
	machines.
