'\" t
.\"___INFO__MARK_BEGIN__
.\"
.\" Copyright: 2001 by Sun Microsystems, Inc.
.\"
.\"___INFO__MARK_END__
.\" $RCSfile: sge_gdi.3,v $     Last Update: $Date: 2001/07/20 08:19:06 $     Revision: $Revision: 1.3 $
.\"
.\"
.\" Some handy macro definitions [from Tom Christensen's man(1) manual page].
.\"
.de SB      \" small and bold
.if !"\\$1"" \\s-2\\fB\&\\$1\\s0\\fR\\$2 \\$3 \\$4 \\$5
..
.\"
.de T    \" switch to typewriter font
.ft CW      \" probably want CW if you don't have TA font
..
.\"
.de TY      \" put $1 in typewriter font
.if t .T
.if n ``\c
\\$1\c
.if t .ft P
.if n \&''\c
\\$2
..
.\"
.de M    \" man page reference
\\fI\\$1\\fR\\|(\\$2)\\$3
..
.TH SGE_GDI 3 "$Date: 2001/07/20 08:19:06 $" "xxRELxx" "xxQS_NAMExx GDI"
.\"
.SH NAME
sge_gdi, sge_gdi_setup, sge_gdi_shutdown \- xxQS_NAMExx GDI calls
.PP
.\"
.\"
.SH SYNOPSIS
.B #include """sge_gdi.h"""
.PP
\fBint sge_gdi_setup( char *programname );\fB
.PP
.nf
\fBlList *sge_gdi(\fB
.RS
\fBu_long32 target,\fB
\fBu_long32 command,\fB
\fBlList** lpp,\fB
\fBlCondition* cp,\fB
\fBlEnumeration* enp,\fB
.RE
.fi
\fB);\fB
.PP
\fBint sge_gdi_shutdown( void );\fB
.\"
.\"
.SH DESCRIPTION
The xxQS_NAMExx Database Interface (GDI)
provides the necessary means to interface
important xxQS_NAMExx functionality directly from inside user
applications. Among the functionality being interfaced by
the xxQS_NAMExx GDI are retrieving status information of jobs and
queues, changing configuration values, submitting and
deleting jobs, suspending and enabling queues, and the like.
.PP
The xxQS_NAMExx GDI is based upon the internal data structures
representing xxQS_NAMExx managed objects such as 
jobs, hosts, queues, queue complexes, scheduling events, scheduling
orders or user access lists. These objects are maintained within
xxQS_NAMExx by use of generic linked lists. A rich set of routines is
available to manipulate such lists (see
.M list_intro 3 ).
The lists can either be accessed similar to the regular computer
science linked lists, or an advance access mode is used, which allows
for viewing upon the xxQS_NAMExx managed objects as database tables
and access them with SQL-like operations such as \fIselect\fP or
\fIjoin\fP.
.PP
There is only one central routine in the xxQS_NAMExx GDI to retrieve
xxQS_NAMExx
objects from
.M sge_qmaster 8
and to register changes: \fIsge_gdi\fP. As soon as xxQS_NAMExx objects have
been obtained in an application the generic list manipulation routines
(see
.M list_intro 3 )
are used to apply changes or to retrieve information from the objects.
.PP
The following is a description of the basic functionality of all
xxQS_NAMExx GDI functions:
.\"
.SS "sge_gdi_setup"
Registers a program for usage of the xxQS_NAMExx GDI.
The parameter \fBprogramname\fP is used for error
and warning messages to identify the originator,
On success 0 is returned.
.\"
.SS "sge_gdi"
Access an object or part thereof managed by xxQS_NAMExx.
.br
.I sge_gdi
returns a generic list reporting success/failure of the intended operation. 
This list gets allocated by \fIsge_gdi\fP. The caller is responsible 
for freeing using
.M lFreeList 3
.br
A list is returned because
.I sge_gdi
itself executes complex operations with lists and a different return
status may occur for each element of the manipulated xxQS_NAMExx object.
.br
A possible response is a list element containing a field with
a status value (AN_status). The value STATUS_OK is used in
case of success. STATUS_OK and other values are defined in
the include file sge_answerL.h. The second field (AN_text) in
a response list element is a string that describes the
performed operation or a description of an error.
.br
Each call of
.I sge_gdi
passes a list with at least one response to the caller.  
The response list of a get command (see below) contains only one
element reporting success or failure. In the other cases one response
list element for each element in the argument list is produced.  
.sp 1
The function arguments have the following meaning:
.\"
.IP "\fBtarget\fP"
Refers to a xxQS_NAMExx managed object. The following xxQS_NAMExx
objects are accessible currently (the names in round brackets
denote the identifiers to be used for \fBtarget\fP): jobs
(JB_Type), execution/administration/submit hosts
(EH_Type/AH_Type/SH_Type), queues (QU_Type), queue complexes
(CE_Type), scheduling events (EV_Type), scheduling orders
(OR_Type) and user access lists (AC_Type).
.\"
.IP "\fBcommand\fP"
Specifies the operation to be executed. Valid values are
SGE_GDI_GET (for retrieving an object), SGE_GDI_ADD
(for adding elements to an object), SGE_GDI_DEL (for deleting
elements from an object) and SGE_GDI_MOD (for modifying
elements of an object).
.\"
.IP "\fBlpp\fP"
This parameter is used to get a list in case of the SGE_GDI_GET command.
The necessary memory for the list is allocated by \fIsge_gdi\fP.
The caller, however, is responsible for freeing the memory by using
.M lFreeList 3 .
In the other cases the caller passes a list pointer referencing the
elements to be added/deleted/modified from the corresponding xxQS_NAMExx
managed object.
.I sge_gdi
does not free the passed list. 
.\"
.IP "\fBcp\fP"
Points to a lCondition as it is built by
.M lWhere 3
in case of the SGE_GDI_GET command. This condition 
describes a profile of the elements to be contained in the list.
It is used to access only a part of a xxQS_NAMExx object.
Has to be NULL in other cases.
.\"
.IP "\fBenp\fP"
Points to a lEnumeration structure built by
.M lWhat 3
in case of the SGE_GDI_GET command. The enumeration describes
the fields in the requested list. It is used to define a
subset of the list. Has to be NULL in other cases.
.\"
.\"
.SS "sge_gdi_shutdown"
This function cancels registration of a program using the
xxQS_NAMExx GDI. On success 0 is returned.
.\"
.\"
.SH "SEE ALSO"
.M xxqs_name_sxx_intro 1 ,
.M list_intro 3 .
.\"
.\"
.SH COPYRIGHT
See
.M xxqs_name_sxx_intro 1
for a full statement of rights and permissions.
