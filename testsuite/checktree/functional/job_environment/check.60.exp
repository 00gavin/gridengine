#!/vol2/TCL_TK/glinux/bin/expect
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# additional checks for N1GE 6
lappend check_functions "job_environment_amount_uninherited"
lappend check_functions "job_environment_JOB_NAME_uninherited"
lappend check_functions "job_environment_INHERIT_ENV"
lappend check_functions "job_environment_SET_LIB_PATH"


proc job_environment_amount_uninherited {} {
   get_config old_config
   set new_config(execd_params) "INHERIT_ENV=false"
   set_config new_config

   # Sleep for 20 seconds to give the coniguration time to propogate to the
   # Execds
   job_environment_sleep

   job_environment_var_test 1

   # undo configuration changes that were made for this test
   set_config old_config
}


################################################################################
# The point of this test is to check that all the job submission methods       #
# continue to function when INHERIT_ENV=false.  Whether or not the job name    #
# env vars are properly set is actually irrelevant.  The                       #
# job_environment_JOB_NAME test checks that.                                   #
################################################################################
proc job_environment_JOB_NAME_uninherited {} {
   # Set INHERIT_ENV=false
   get_config old_config
   set new_config(execd_params) "INHERIT_ENV=false"
   set_config new_config
   job_environment_sleep

   # Run JOB_NAME test
   job_environment_JOB_NAME
}

proc job_environment_INHERIT_ENV {} {
   # Set INHERIT_ENV=false
   get_config old_config
   set new_config(execd_params) "INHERIT_ENV=false"
   set_config new_config
   job_environment_sleep

   # Submit job
   if {[job_environment_qsub_job "jobenv.sh" job_env "-o /dev/null -e /dev/null"]} {
      # Check for presence of TERM env var
      if {[info exists job_env(TERM)]} {
         add_proc_error "job_environment_INHERIT_ENV" -1 "Failed for INHERIT_ENV=false"
      }
   } else {
      add_proc_error "job_environment_INHERIT_ENV" -1 "Failed submitting job"
   }

   # Set exced_params=none
   set new_config(execd_params) "none"
   set_config new_config
   job_environment_sleep

   # Submit job
   if {[job_environment_qsub_job "jobenv.sh" job_env "-o /dev/null -e /dev/null"]} {
      # Check for presence of TERM env var
      if {![info exists job_env(TERM)]} {
         add_proc_error "job_environment_INHERIT_ENV" -1 "Failed for none after execd_params=none (case 1)"
      }
   } else {
      add_proc_error "job_environment_INHERIT_ENV" -1 "Failed submitting job"
   }

   # Set INHERIT_ENV=true
   set new_config(execd_params) "INHERIT_ENV=true"
   set_config new_config
   job_environment_sleep

   # Submit job
   if {[job_environment_qsub_job "jobenv.sh" job_env "-o /dev/null -e /dev/null"]} {
      # Check for presence of TERM env var
      if {![info exists job_env(TERM)]} {
         add_proc_error "job_environment_INHERIT_ENV" -1 "Failed for INHERIT_ENV=true"
      }
   } else {
      add_proc_error "job_environment_INHERIT_ENV" -1 "Failed submitting job"
   }

   # Set exced_params=none
   set new_config(execd_params) "none"
   set_config new_config
   job_environment_sleep

   # Submit job
   if {[job_environment_qsub_job "jobenv.sh" job_env "-o /dev/null -e /dev/null"]} {
      # Check for presence of TERM env var
      if {![info exists job_env(TERM)]} {
         add_proc_error "job_environment_INHERIT_ENV" -1 "Failed for none after execd_params=none (case 2)"
      }
   } else {
      add_proc_error "job_environment_INHERIT_ENV" -1 "Failed submitting job"
   }

   # Undo configuration changes that were made for this test
   set_config old_config

   set_error 0 "ok"
}

proc job_environment_get_shlib_path_var { array } {
   global ts_config CHECK_OUTPUT

   upvar $array job_env

   puts $CHECK_OUTPUT "Finding shared library path..."

   if { [info exists job_env(LD_LIBRARY_PATH)] == 1 } {
      puts $CHECK_OUTPUT "LD_LIBRARY_PATH is set."
      return "LD_LIBRARY_PATH"
   } elseif { [info exists job_env(SHLIB_PATH)] == 1} {
      puts $CHECK_OUTPUT "SHLIB_PATH is set."
      return "SHLIB_PATH"
   } elseif { [info exists job_env(DYLD_LIBRARY_PATH)] == 1} {
      puts $CHECK_OUTPUT "DYLD_LIBRARY_PATH is set."
      return "DYLD_LIBRARY_PATH"
   } else {
      puts $CHECK_OUTPUT "No shared library path is set."
      return ""
   }
}

proc job_environment_SET_LIB_PATH {} {
   global ts_config CHECK_OUTPUT
   global test_host

   set arch [resolve_arch $test_host]
   set sge_path "$ts_config(product_root)/lib/$arch"
   puts $CHECK_OUTPUT "expected SGE lib path is $sge_path"

   # Set INHERIT_ENV=true, SET_LIB_PATH=true
   get_config old_config
   set new_config(execd_params) "INHERIT_ENV=true,SET_LIB_PATH=true"
   set_config new_config
   job_environment_sleep

   # Submit job
   if {[job_environment_qsub_job "jobenv.sh" job_env "-o /dev/null -e /dev/null"]} {
      # Find lib path env var
      set lib_path [job_environment_get_shlib_path_var job_env]
      puts $CHECK_OUTPUT "lib path var is $lib_path"

      # Test that lib path starts with SGE lib path
      puts $CHECK_OUTPUT "lib path is $job_env($lib_path)"
      if {[string first $sge_path $job_env($lib_path)] != 0} {
         add_proc_error "job_environment_SET_LIB_PATH" -1 "Failed for INHERIT_ENV=true,SET_LIB_PATH=true"
      }
   } else {
      add_proc_error "job_environment_SET_LIB_PATH" -1 "Failed submitting job"
   }

# This can only be tested if we know whether the execd has a shared lib path set
#   # Set INHERIT_ENV=true, SET_LIB_PATH=false
#   set new_config(execd_params) "INHERIT_ENV=true,SET_LIB_PATH=false"
#   set_config new_config
#   job_environment_sleep
#
#   # Submit job
#   if {[job_environment_qsub_job "jobenv.sh" job_env "-o /dev/null -e /dev/null"]} {
#      # Test that lib path exists
#      if {![info exists job_env($lib_path)]} {
#         add_proc_error "job_environment_SET_LIB_PATH" -1 "Failed for INHERIT_ENV=true,SET_LIB_PATH=false"
#      }
#   } else {
#      add_proc_error "job_environment_SET_LIB_PATH" -1 "Failed submitting job"
#   }

   # Set INHERIT_ENV=false, SET_LIB_PATH=true
   set new_config(execd_params) "INHERIT_ENV=false,SET_LIB_PATH=true"
   set_config new_config
   job_environment_sleep

   # Submit job
   if {[job_environment_qsub_job "jobenv.sh" job_env "-o /dev/null -e /dev/null"]} {
      # Test that lib path contains only SGE lib path
      puts $CHECK_OUTPUT "lib path is $job_env($lib_path)"
      if {[string compare $job_env($lib_path) $sge_path] != 0} {
         add_proc_error "job_environment_SET_LIB_PATH" -1 "Failed for INHERIT_ENV=false,SET_LIB_PATH=true"
      }
   } else {
      add_proc_error "job_environment_SET_LIB_PATH" -1 "Failed submitting job"
   }

   # Set INHERIT_ENV=false, SET_LIB_PATH=false
   set new_config(execd_params) "INHERIT_ENV=false,SET_LIB_PATH=false"
   set_config new_config
   job_environment_sleep

   # Submit job
   if {[job_environment_qsub_job "jobenv.sh" job_env "-o /dev/null -e /dev/null"]} {
      # Test that lib path doesn't exist
      if {[info exists job_env($lib_path)]} {
         puts $CHECK_OUTPUT "lib path is $job_env($lib_path)"
         add_proc_error "job_environment_SET_LIB_PATH" -1 "Failed for INHERIT_ENV=false,SET_LIB_PATH=false"
      }
   } else {
      add_proc_error "job_environment_SET_LIB_PATH" -1 "Failed submitting job"
   }

   # Undo configuration changes that were made for this test
   set_config old_config

   set_error 0 "ok"
}

proc job_environment_sleep {} {
   global CHECK_OUTPUT

   puts $CHECK_OUTPUT "Waiting for environment change to propogate to execds"
   after 20000
}


