#!/vol2/TCL_TK/glinux/bin/expect
# global variables ... (defined in main check routine, but you can use it)
#___INFO__MARK_BEGIN__
##########################################################################
#
#  The Contents of this file are made available subject to the terms of
#  the Sun Industry Standards Source License Version 1.2
#
#  Sun Microsystems Inc., March, 2001
#
#
#  Sun Industry Standards Source License Version 1.2
#  =================================================
#  The contents of this file are subject to the Sun Industry Standards
#  Source License Version 1.2 (the "License"); You may not use this file
#  except in compliance with the License. You may obtain a copy of the
#  License at http://gridengine.sunsource.net/Gridengine_SISSL_license.html
#
#  Software provided under this License is provided on an "AS IS" basis,
#  WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,
#  WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE IS FREE OF DEFECTS,
#  MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE, OR NON-INFRINGING.
#  See the License for the specific provisions governing your rights and
#  obligations concerning the Software.
#
#  The Initial Developer of the Original Code is: Sun Microsystems, Inc.
#
#  Copyright: 2001 by Sun Microsystems, Inc.
#
#  All Rights Reserved.
#
##########################################################################
#___INFO__MARK_END__

# Define the global veriables to give them back
global check_name check_description check_needs check_functions check_errno check_errstr 
set check_name         "qstat"
set check_description(0)  "checking \"qstat -f\" - queue count, slotcount, load"
set check_needs        "init_core_system"  ;# dependencies of this check (name of other check)
set check_functions    "check_core_queues"           ;# functions to call (in order)
set check_errno       "-1"                          ;# 0 -> OK , != 0 means error
set check_errstr        "was never running"           ;# string for error description



#                                                             max. column:     |
#****** qstat/get_numb_proc() ******
# 
#  NAME
#     get_numb_proc -- ??? 
#
#  SYNOPSIS
#     get_numb_proc { } 
#
#  FUNCTION
#     ??? 
#
#  INPUTS
#
#  RESULT
#     ??? 
#
#  EXAMPLE
#     ??? 
#
#  NOTES
#     ??? 
#
#  BUGS
#     ??? 
#
#  SEE ALSO
#     ???/???
#*******************************
proc get_numb_proc {} {
  global CHECK_PRODUCT_ROOT CHECK_ARCH
  set result ""
  catch {exec "$CHECK_PRODUCT_ROOT/utilbin/$CHECK_ARCH/loadcheck" } result
#
#Original output of loadcheck looks like this:
#>loadcheck 
#arch            irix6
#num_proc        1
  
  # split each line as listelement
  set help [split $result "\n"]

  foreach elem $help {
     if {[string compare [lindex $elem 0] "num_proc"] == 0} {
        set numproc [lindex $elem 1]
     }
  }

  return $numproc    
}

# here starts the test
#                                                             max. column:     |
#****** qstat/check_core_queues() ******
# 
#  NAME
#     check_core_queues -- ??? 
#
#  SYNOPSIS
#     check_core_queues { } 
#
#  FUNCTION
#     ??? 
#
#  INPUTS
#
#  RESULT
#     ??? 
#
#  EXAMPLE
#     ??? 
#
#  NOTES
#     ??? 
#
#  BUGS
#     ??? 
#
#  SEE ALSO
#     ???/???
#*******************************
proc check_core_queues {} {
  global check_errno check_errstr CHECK_PRODUCT_ROOT CHECK_ARCH CHECK_CORE_EXECD CHECK_HOST

  wait_for_load_from_all_queues 300

  set result ""

  catch {exec "$CHECK_PRODUCT_ROOT/bin/$CHECK_ARCH/qstat" "-f"} result
#
#Original output of qstat -f looks like this:
#>qstat -f
#queuename            qtype used/tot. load_avg arch    states
#----------------------------------------------------------------------------
#BALROG.q             BI    0/2       1.42     solaris64 
#----------------------------------------------------------------------------
#DWAIN.q              BI    1/1       2.00     irix6     a
#     2     0 Sleeper    crei         r     05/15/2000 13:09:48 MASTER           
#
############################################################################
# - PENDING JOBS - PENDING JOBS - PENDING JOBS - PENDING JOBS - PENDING JOBS
############################################################################
#     3     0 Sleeper    crei         qw    05/15/2000 13:09:49          

  # split each line as listelement
  set help [split $result "\n"]
 
  #remove first line
  set help [lreplace $help 0 0]
  set data ""

  #get every line after "----..." line 
  set len [llength $help]
  for {set ind 0} {$ind < $len } {incr ind 1} {
     if {[lsearch [lindex $help $ind] "------*"] >= 0 } {
        lappend data [lindex $help [expr ( $ind + 1 )]] 
     }
  }


  set qcount [ llength $data]
  set qnames ""
  set slots ""
  set load ""

  # get line data information for queuename used/tot and load_avg
  foreach elem $data {
     set linedata $elem
     lappend qnames [lindex $linedata 0]
     set used_tot [lindex $linedata 2]
     set pos1 [ expr ( [string first "/" $used_tot] + 1 ) ]
     set pos2 [ expr ( [string length $used_tot]          - 1 ) ]

     lappend slots [string range $used_tot $pos1 $pos2 ]
     lappend load [lindex $linedata 3]
  }
 
  

  # check if number of queues matches core system queue count
  if { [llength $CHECK_CORE_EXECD] != $qcount } {
     set_error -1 "check_core_queues - queue count doesn't match (number of queues should be [llength $CHECK_CORE_EXECD])"
     return
  }

  # check if slots for host $CHECK_HOST are correct (needs successfully tested "loadcheck" check)
  set numofproc [get_numb_proc]
  if { [lindex $slots [lsearch $qnames "$CHECK_HOST.q"] ] != [expr ( $numofproc * 10 )] } {
     set_error -1 "check_core_queues - queue $CHECK_HOST.q shoud have [expr ( $numofproc * 10 )] slots) (cpu count * 10)"
     return
  } 

  # check if load of an host is set > 99 (no exed report)
  set ind 0
  foreach elem $load {
    if {$elem >= 99} {
       set_error -1 "check_core_queues - queue [lindex $qnames $ind] has load > 99"
       return
    }
    incr ind 1
  }

  puts "check_core_queues\n- number of queues: $qcount\n- qnames: $qnames\n- slots: $slots\n- load: $load"

  # ok - no errors, very very nice ;-) 
  set_error 0 "check_core_queues - no errors"
}
